import tkinter as tk
from tkinter import messagebox
import sqlite3

# Connect to database
DATABASE_NAME = "assignment3_1.db"
conn = sqlite3.connect(DATABASE_NAME)
cursor = conn.cursor()

class InstructorApp:
    def __init__(self, master):
        self.master = master
        master.title("Instructor Panel")
        master.geometry("600x450")

        self.content_frame = tk.Frame(master, padx=10, pady=10)
        self.content_frame.pack(fill=tk.BOTH, expand=True)

        self.build_main_screen()

    def clear_frame(self, frame):
        for widget in frame.winfo_children():
            widget.destroy()

    def build_main_screen(self):
        self.clear_frame(self.content_frame)
        tk.Label(self.content_frame, text="Instructor Panel", font=("Arial", 16, "bold")).pack(pady=10)

        button_frame = tk.Frame(self.content_frame)
        button_frame.pack(pady=10)

        tk.Button(button_frame, text="Search Course by CRN", command=self.show_search_course, font=("Arial", 12), bg="#2196F3", fg="white").pack(side=tk.LEFT, padx=5)
        tk.Button(button_frame, text="View Class List", command=self.show_class_list_input, font=("Arial", 12), bg="#4CAF50", fg="white").pack(side=tk.LEFT, padx=5)
        tk.Button(button_frame, text="View My Schedule", command=self.show_schedule_input, font=("Arial", 12), bg="#FFC107", fg="black").pack(side=tk.LEFT, padx=5)
        tk.Button(button_frame, text="Exit", command=self.master.quit, font=("Arial", 12), bg="#F44336", fg="white").pack(side=tk.LEFT, padx=5)

        self.result_text = tk.Text(self.content_frame, height=15, wrap=tk.WORD, font=("Consolas", 10))
        self.result_text.pack(fill=tk.BOTH, expand=True, pady=10)

    def show_search_course(self):
        self.clear_frame(self.content_frame)
        tk.Label(self.content_frame, text="Enter CRN to Search:", font=("Arial", 12)).pack(pady=5)
        self.crn_entry = tk.Entry(self.content_frame, width=30)
        self.crn_entry.pack(pady=5)
        tk.Button(self.content_frame, text="Search", command=self.search_course).pack(pady=5)
        tk.Button(self.content_frame, text="Back", command=self.build_main_screen).pack()

    def search_course(self):
        crn = self.crn_entry.get().strip()
        if not crn:
            messagebox.showwarning("Input Error", "Please enter a CRN.")
            return
        cursor.execute("SELECT * FROM COURSE WHERE CRN = ?", (crn,))
        result = cursor.fetchone()
        self.display_result("Course Information", result)

    def show_class_list_input(self):
        self.clear_frame(self.content_frame)
        tk.Label(self.content_frame, text="Enter Course Title to Get Class List:", font=("Arial", 12)).pack(pady=5)
        self.course_title_entry = tk.Entry(self.content_frame, width=30)
        self.course_title_entry.pack(pady=5)
        tk.Button(self.content_frame, text="Get Class List", command=self.get_class_list).pack(pady=5)
        tk.Button(self.content_frame, text="Back", command=self.build_main_screen).pack()

    def get_class_list(self):
        title = self.course_title_entry.get().strip()
        if not title:
            messagebox.showwarning("Input Error", "Please enter a course title.")
            return
        cursor.execute("""
            SELECT first, last, ID FROM STUDENT 
            WHERE course1=? OR course2=? OR course3=? OR course4=? OR course5=?
        """, (title, title, title, title, title))
        results = cursor.fetchall()
        self.display_result("Class List", results)

    def show_schedule_input(self):
        self.clear_frame(self.content_frame)
        tk.Label(self.content_frame, text="Enter Instructor Name:", font=("Arial", 12)).pack(pady=5)
        self.instructor_name_entry = tk.Entry(self.content_frame, width=30)
        self.instructor_name_entry.pack(pady=5)
        tk.Button(self.content_frame, text="Get Schedule", command=self.get_schedule).pack(pady=5)
        tk.Button(self.content_frame, text="Back", command=self.build_main_screen).pack()

    def get_schedule(self):
        name = self.instructor_name_entry.get().strip()
        if not name:
            messagebox.showwarning("Input Error", "Please enter instructor's name.")
            return
        cursor.execute("SELECT * FROM COURSE WHERE instructor = ?", (name,))
        results = cursor.fetchall()
        self.display_result("Instructor Schedule", results)

    def display_result(self, title, data):
        self.clear_frame(self.content_frame)
        tk.Label(self.content_frame, text=title, font=("Arial", 14, "bold")).pack(pady=10)
        result_text = tk.Text(self.content_frame, height=15, wrap=tk.WORD)
        result_text.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        if data:
            if isinstance(data, list):
                for row in data:
                    result_text.insert(tk.END, f"{row}\n")
            else:
                result_text.insert(tk.END, f"{data}\n")
        else:
            result_text.insert(tk.END, "No results found.")
        tk.Button(self.content_frame, text="Back to Main", command=self.build_main_screen).pack(pady=10)

if __name__ == "__main__":
    root = tk.Tk()
    app = InstructorApp(root)
    root.mainloop()
    conn.close()
